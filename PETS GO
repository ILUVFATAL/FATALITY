local Rayfield = loadstring(game:HttpGet('https://sirius.menu/rayfield'))()

local Window = Rayfield:CreateWindow({
   Name = "Fatality script",
   LoadingTitle = "Rayfield Interface Suite",
   LoadingSubtitle = "by Sirius",
   Theme = "Default", -- Check https://docs.sirius.menu/rayfield/configuration/themes

   DisableRayfieldPrompts = false,

   ConfigurationSaving = {
      Enabled = true,
      FolderName = nil, -- Create a custom folder for your hub/game
      FileName = ""
   },

   Discord = {
      Enabled = false, -- Prompt the user to join your Discord server if their executor supports it
      Invite = "noinvitelink", -- The Discord invite code, do not include discord.gg/. E.g. discord.gg/ABCD would be ABCD
      RememberJoins = true -- Set this to false to make them join the discord every time they load it up
   },

   KeySystem = true, -- Set this to true to use our key system
   KeySettings = {
      Title = "Untitled",
      Subtitle = "Key System",
      Note = "No method of obtaining the key is provided", -- Use this to tell the user how to get a key
      FileName = "Key", -- It is recommended to use something unique as other scripts using Rayfield may overwrite your key file
      SaveKey = true, -- The user's key will be saved, but if you change the key, they will be unable to use your script
      GrabKeyFromSite = true, -- If this is true, set Key below to the RAW site you would like Rayfield to get the key from
      Key = {"https://pastebin.com/raw/qzM9vRme"} -- List of keys that will be accepted by the system, can be RAW file links (pastebin, github etc) or simple strings ("hello","key22")
   }
})
 local MainTab = Window:CreateTab("Pets", 4483362458) -- Title, Image
local MainSection = Tab:CreateSection("Main")
local Button = MainTab:CreateButton({
   Name = "Farm",
   Callback = function(function sendPetsToBreakables()
    -- Assuming 'pets' is a table containing all your pet objects
    local pets = getAllPets()  -- Replace with actual function to get all pets
    local breakables = getAllBreakables()  -- Replace with actual function to get all breakable objects

    for _, pet in ipairs(pets) do
        for _, breakable in ipairs(breakables) do
            -- Assuming each pet has a method to move to a target
            pet:moveTo(breakable.position)  -- Replace with actual method to move the pet
            pet:break(breakable)  -- Replace with actual method to break the object
        end
    end
end

-- Function to get all pets (placeholder)
function getAllPets()
    -- Replace with actual logic to retrieve your pets
    return {}
end

-- Function to get all breakable objects (placeholder)
function getAllBreakables()
    -- Replace with actual logic to retrieve breakable objects
    return {}
end

-- Call the function to send pets to break breakables
sendPetsToBreakables())
   -- The function that takes place when the button is pressed
   end,
})
